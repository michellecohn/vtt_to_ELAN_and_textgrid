###############################################################
#
#
# Convert .vtt -> .txt -> dataframe (appropriate for ELAN)
#
# MC 8/17/20
#
###############################################################
library(stringr)

cd = "Directory/files/"
setwd(cd)

# Open .vtt file

dat = read.delim("transcript.vtt", header = TRUE)

# Initialize dataframe 
nrows = length(dat$WEBVTT)
df = as.data.frame(matrix(data = NA, nrow = nrows, ncol = 1))
df["speaker"] = NA
df["blank_col2"] = NA
df["start_time"] = NA
df["end_time"] = NA
df["text"] = NA

# Loop through rows 
turn_counter = 0
for(r in 1:nrows){
  curr_row = as.character(dat$WEBVTT[r])
  timing_row = grepl("*-->*", curr_row)
  
  if(timing_row == TRUE){
    turn_counter = turn_counter + 1
    timing_info_adjustment = 0
    speaker_and_text_adjustment = 1
    
    # Col 1 = speaker (Before colon)
    curr_speaker = as.character(dat$WEBVTT[r+speaker_and_text_adjustment])
 #   data_matrix[turn_counter,1] = str_extract(curr_speaker, ".+?:")
    df$speaker[turn_counter] = str_extract(curr_speaker, ".*(?=:)")
    
    # Col 2 = blank
    # Col 3 = start time (Get value before -->)
    df$start_time[turn_counter] = str_extract(curr_row, ".*(?= -->)")
    
    # Col 4 = end (Get value after -->)
    df$end_time[turn_counter] = str_extract(curr_row, "(?<=--> ).*")
    
    # Col 5 = text (Get values after : in speaker)
    curr_text = str_extract(curr_speaker, "(?<=: ).*")
    if(is.na(curr_text) == FALSE){
      if(curr_text != "Recording"){
        df$text[turn_counter] = curr_text
      } #endif record text
    } #endif isn't na

  }# 
  
}#endfor



###############################################################
#
#
# Convert .vtt -> .txt -> dataframe (appropriate for ELAN)
#
# MC 8/17/20
#
###############################################################
#library(reshape)
library(stringr)

cd = "/Volumes/Extreme_SSD/!!!!! NSF Zoom Study Data (Adults) /SUB_202-selected/"
setwd(cd)

# Open .vtt file

dat = read.delim("GMT20200813-192311_JINGQI-LI-.transcript.vtt", header = TRUE)

# Initialize dataframe 
nrows = length(dat$WEBVTT)
df = as.data.frame(matrix(data = NA, nrow = nrows, ncol = 1))
df["speaker"] = NA
df["blank_col2"] = NA
df["start_time"] = NA
df["end_time"] = NA
df["text"] = NA

# Loop through rows 
turn_counter = 0
for(r in 1:nrows){
  curr_row = as.character(dat$WEBVTT[r])
  timing_row = grepl("*-->*", curr_row)
  
  if(timing_row == TRUE){
    turn_counter = turn_counter + 1
    timing_info_adjustment = 0
    speaker_and_text_adjustment = 1
    
    # Col 1 = speaker (Before colon)
    curr_speaker = as.character(dat$WEBVTT[r+speaker_and_text_adjustment])
 #   data_matrix[turn_counter,1] = str_extract(curr_speaker, ".+?:")
    df$speaker[turn_counter] = str_extract(curr_speaker, ".*(?=:)")
    
    # Col 2 = blank
    # Col 3 = start time (Get value before -->)
    df$start_time[turn_counter] = str_extract(curr_row, ".*(?= -->)")
    
    # Col 4 = end (Get value after -->)
    df$end_time[turn_counter] = str_extract(curr_row, "(?<=--> ).*")
    
    # Col 5 = text (Get values after : in speaker)
    curr_text = str_extract(curr_speaker, "(?<=: ).*")
    if(is.na(curr_text) == FALSE){
      if(curr_text != "Recording"){
        df$text[turn_counter] = curr_text
      } #endif record text
    } #endif isn't na

  }# 
  
}#endfor

# Remove first column (placeholder)
df = df[,-1]

# Remove any rows with a speaker == "NA" and text == NA
df = subset(df, (speaker != "NA"))
df = subset(df, (text != "NA"))


# Write to .txt file
write.table(df, "202_transcript.txt", sep = "\t", dec = ".", quote = FALSE,
            row.names = FALSE, col.names = TRUE)





